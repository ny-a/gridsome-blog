{"hash":"dbd1b8bd300f76a689bda8facab1be3fa60823ea","data":{"post":{"id":"4843695414edfabaf84ec8d875bbb8ae","title":"git filter-repoを使ってみました","content":"<p>Git を使っていて、何らかの理由でコミット履歴を書き換えたいとき、\n標準サブコマンドの中でよく使われるのは filter-branch でしょう。</p>\n<p>ただ、<a href=\"https://git-scm.com/docs/git-filter-branch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">公式ドキュメント</a>\nを見てみると、filter-branch を使う代わりに、\n<a href=\"https://github.com/newren/git-filter-repo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">filter-repo</a>\nというサードパーティーの代替などを使うように警告されます。</p>\n<p>そこで、filter-repo を使ってみました。\nArchLinux では <a href=\"https://archlinux.org/packages/community/any/git-filter-repo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">community/git-filter-repo</a>\nからインストールできます。</p>\n<p>今回やりたいことは (いつも同じで)、個人で使っているこのアカウントが\nAuthor/Committer となっているコミットを、仕事で使っている情報に書き換えることです。\n(毎回 git config をやり忘れるの、何か対策したいところですが……。)</p>\n<p>ドキュメントを見てみると、どうもあまりオプションはないようです。\nというより、Python のコードをオプションとして渡してあげると、\nいい感じに実行してくれるようです。</p>\n<p>今回はまだ自分しかコミットしていないリポジトリだったので、\n常に同じバイナリ列 (文字列ではダメです) を返すコードを書きます。</p>\n<p>……その前に、バックアップを取っておきます。\nfilter-repo では、clone したばかりの clean なリポジトリを使うことが推奨されています。\n/tmp で <code>git clone /path/to/repository --no-local</code> を実行して、リポジトリを複製します。</p>\n<p>次に、実際の書き換えを行っていきます。\n<code>--email-callback</code> と <code>--name-callback</code> を使います。\nどちらも現在の値を考慮する必要はないため、\n<code>\"return b'user@example.com'\"</code> のような引数を与えればいいです。</p>\n<p>そして実行すると……、一瞬で終わりました。\nfilter-branch では original が残りますが、filter-repo では残らないようです。\n軽く見た感じ問題なく完了しているようなので、\n<code>git push /path/to/repository branch:branch_new</code> を実行して、\n元のリポジトリに書き換えたコミットを push します。</p>\n<p>元のブランチと diff を取って、当然何も出ないことを確認したら、\n<code>git reset --hard branch_new</code> したり、\n<code>git branch -f branch branch_new</code> したりして古いブランチを新しいブランチに移動します。</p>\n<p>あとは、必要に応じて force push したり(関係するメンバーに謝りましょう……)、\n運よく push していなければ、もう二度と同じ誤ちを繰り返さないように心に誓ったりしましょう。</p>\n","date":"03 July 2021","timeToRead":1}},"context":{}}