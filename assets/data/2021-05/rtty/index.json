{"hash":"0f76bc1291fec37937f97bb2b3f714ddfb439819","data":{"post":{"id":"86d323bb5301ee981f1b848823c22686","title":"RTTY のデコードを試してみました","content":"<p>セキュリティ・ネクストキャンプに応募しようと思うので、その講義の中で扱われる\nRTTY について少し試してみようと思いました。</p>\n<p>講師の方のプロジェクトは <a href=\"https://github.com/imaoca/RTTY\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">imaoca/RTTY - GitHub</a> にあります。</p>\n<p>ここでは、サンプルの音声ファイルとして Wikipedia の <a href=\"https://en.wikipedia.org/wiki/File:RTTY.ogg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RTTY.ogg</a> を\n使用します。</p>\n<p>ただ、このままでは使用できず、このプロジェクトのスクリプトで仮定されているフォーマットに\n変換する必要があります。</p>\n<p>サクっと ffmpeg を使って 8KHz sampling, mono, 8bit quantization, and no sign な wav ファイルに\n変換しましょう。</p>\n<pre class=\"language-text\"><code class=\"language-text\">ffmpeg -i RTTY.ogg -ar 8k -c:a pcm_u8 -f wav rtty3s.wav</code></pre>\n<p><code>-i</code> の後の ogg ファイルが入力、<code>-ar</code> がサンプリングレート、<code>-c:a</code> で量子化ビット数と符号なしを指定して、\n<code>-f</code> で wav フォーマットを指定、最後に出力先ファイル名です。</p>\n<p>あとは README の Usage に従って、</p>\n<pre class=\"language-text\"><code class=\"language-text\">python rtty8k.py &gt; rtty.csv</code></pre>\n<p>を実行すれば、Excel なんかで読み込んでグラフ化することができるでしょう。</p>\n<h2 id=\"詰まった所\"><a href=\"#%E8%A9%B0%E3%81%BE%E3%81%A3%E3%81%9F%E6%89%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>詰まった所</h2>\n<p>wav ファイルのフォーマットです。\nサンプリングレートについては、始めは元ファイルの48kHzのままにして、プログラム側のパラメータ修正で\nなんとかしていたのですが、フォーマットは pcm_s16le のままだとダメでした……。</p>\n<p>普段 pcm_u8 なんて使わないので。。。README は穴が開くくらい読みましょうという感じでした。</p>\n","date":"29 May 2021","timeToRead":1}},"context":{}}