{"hash":"15d7a53fb12f989bcb745359720376351bb2f767","data":{"post":{"id":"64c2be1c16efc647c27de0d0032379d0","title":"Git rerereサブコマンドを知りました","content":"<p><a href=\"https://levelup.gitconnected.com/the-git-rerere-command-automate-solutions-to-fix-merge-conflicts-d501a9ab9007\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The Git Rerere Command — Automate Solutions to Fix Merge Conflicts</a>\nを見て <code>git-rerere</code> サブコマンドを知りました。\nと言ってもまだ experimental なようで、 <code>git config [--global] rerere.enabled true</code> を実行しないと使えないようです。</p>\n<p>上記の記事を見て少し試してみましたが、業務では今のところ使おうとは思いませんでした。\nconflict したときに <code>git consult</code> みたいなコマンドを呼んで、過去の似た conflict 解消を含む merge commit を参照して、\n似たような解決を試みるようなものが欲しいのかなと思いました。\nといっても、それだと rebase なんかを consult できないので、 rerere の方が少し強力ではありますが。</p>\n<p><a href=\"https://git-scm.com/docs/git-rerere\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">git-rerere のドキュメント</a> をちらっと見てみて、他にもいろいろな\nサブコマンドがあるのでそれを見てみたら、 <code>git-worktree</code> など知らないコマンドを知ることができて楽しいです。</p>\n<p>とはいえ、 git も複雑になりすぎているのでは……と思うこともあります。\nサブコマンドに分かれているとはいえ……</p>\n","date":"16 February 2020","timeToRead":1}},"context":{}}