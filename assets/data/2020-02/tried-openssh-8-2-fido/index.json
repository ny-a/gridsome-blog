{"hash":"d1bf73f04d09f25671a6e960fd33fc529a87fd38","data":{"post":{"id":"f181f388fbe37b57704d129ba47812f4","title":"OpenSSH8.2でFIDO2を試しました","content":"<p>といってもキーの生成だけですが……</p>\n<p>とりあえず手元にある古い(？) Yubikey を使って ecdsa-sk のキーの生成ができることを確認してみます。</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ ssh-keygen -t ecdsa-sk -b <span class=\"token number\">521</span>\nGenerating public/private ecdsa-sk key pair.\nYou may need to <span class=\"token function\">touch</span> your authenticator to authorize key generation.\nEnter passphrase <span class=\"token punctuation\">(</span>empty <span class=\"token keyword\">for</span> no passphrase<span class=\"token punctuation\">)</span>: \nEnter same passphrase again: \nYour identification has been saved <span class=\"token keyword\">in</span> <span class=\"token punctuation\">..</span>.\nYour public key has been saved <span class=\"token keyword\">in</span> <span class=\"token punctuation\">..</span>.\nThe key fingerprint is:\nSHA256:LHym5H0zQ6tvRXNZp/bMEUy7F1WN6tUicAGJMjxSOZQ <span class=\"token punctuation\">..</span>.\nThe key's randomart image is:\n+-<span class=\"token punctuation\">[</span>ECDSA-SK <span class=\"token number\">256</span><span class=\"token punctuation\">]</span>--+\n<span class=\"token operator\">|</span>     +oo <span class=\"token punctuation\">..</span>o<span class=\"token punctuation\">..</span>oo<span class=\"token operator\">=</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>    <span class=\"token builtin class-name\">.</span> E <span class=\"token builtin class-name\">.</span> o <span class=\"token builtin class-name\">.</span> .o*<span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>     <span class=\"token builtin class-name\">.</span> <span class=\"token operator\">=</span>   o <span class=\"token builtin class-name\">.</span> Bo<span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>     <span class=\"token builtin class-name\">.</span> <span class=\"token builtin class-name\">.</span>    <span class=\"token operator\">=</span> B.+<span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>      + S .o * *o<span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>     o * <span class=\"token builtin class-name\">.</span> .o   <span class=\"token operator\">=</span><span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>      o <span class=\"token builtin class-name\">.</span> *.     <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>         o.+     <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>        .o.      <span class=\"token operator\">|</span>\n+----<span class=\"token punctuation\">[</span>SHA256<span class=\"token punctuation\">]</span>-----+</code></pre>\n<p>256 bit になってしまいました、 Yubikey 側の制限ですかね？</p>\n<p>念のため？ ed25519-sk のキーも生成してみます。</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">$ ssh-keygen -t ed25519-sk -b <span class=\"token number\">521</span>\nGenerating public/private ed25519-sk key pair.\nYou may need to <span class=\"token function\">touch</span> your authenticator to authorize key generation.\nKey enrollment failed: requested feature not supported</code></pre>\n<p>Yubikey が ed25519 に対応していないのでこちらは当然失敗しました。</p>\n<p>生成に成功した ecdsa-sk キーを使って ssh しようとしてみましたが、相手が openssh7.9p1 だったので失敗しました。</p>\n<p>とはいえ Yubikey の SmartCard の方が〜〜〜、というか対応サーバーが十分普及したら使うか考えましょう。</p>\n<p>リリースノート、FIDO2/U2F と書いている部分と FIDO2 しか書いていない部分があって、 U2F しか書いていない部分はない？ので、\nU2F についてはよく分かっていません……というか、認証周りいろいろややこしすぎて……追い追い調べてまとめようと思います。</p>\n","date":"18 February 2020","timeToRead":1}},"context":{}}