{"hash":"4f92031596e6b36c64425b9092eac89771497dcf","data":{"post":{"id":"857d5082245e260e7cdd5b018f6e54fd","title":"Firefox の GUI を docker コンテナ内で起動する","content":"<p><a href=\"https://www.qubes-os.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Qubes OS</a> はアプリケーションを VM で分離しますが、 Arch Linux 上で Docker コンテナを利用して\n同じようなことを試してみました。</p>\n<p>例えば、 Firefox を起動するには以下のようにします。</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> docker run --rm <span class=\"token punctuation\">\\</span>\n  -v /tmp/.X11-unix <span class=\"token punctuation\">\\</span>\n  -v ~/.Xauthority:/home/user/.Xauthority <span class=\"token punctuation\">\\</span>\n  -e <span class=\"token environment constant\">DISPLAY</span> <span class=\"token punctuation\">\\</span>\n  -e <span class=\"token assign-left variable\"><span class=\"token environment constant\">XAUTHORITY</span></span><span class=\"token operator\">=</span>/home/user/.Xauthority <span class=\"token punctuation\">\\</span>\n  --net <span class=\"token function\">host</span> <span class=\"token punctuation\">\\</span>\n  archlinux/base <span class=\"token punctuation\">\\</span>\n  <span class=\"token function\">sh</span> -c <span class=\"token string\">'pacman -Syu --noconfirm firefox; useradd user; chown user:user /home/user; su user firefox'</span></code></pre>\n<p>Dockerfile には USER instruction があるので、それを使って Xorg を起動中の UID と一致させればよいはずです。</p>\n<p><code>-v /home/user/.Xauthority</code> だけだとディレクトリとしてマウントされてしまってうまくいきませんでした。\n<code>--net host</code> を付けないと、リモートホストからの X 接続と認識されるため、 xhost などが必要になると思います。</p>\n<p>また、ウィンドウサイズを FullHD 程度にするとクラッシュしてしまう問題もあります。これはまだ解決法が分かっていませんが、\nSSH の X 転送を使って他のマシンの Firefox を起動したときは起きないため、Docker のメモリか cgroup か何かが原因かなと\n思っています。</p>\n<p>Arch Linux のインストールプロセスは overlayfs と親和性が高そうなので、 pacman のインストールを docker のレイヤーに\n置き換えたようなコンテナシステムを作りたいと思っていますが、 alpm hook 周りを理解しないといけなかったり、\nまだまだ先は長そうです。</p>\n","date":"20 March 2020","timeToRead":1}},"context":{}}