{"hash":"01b82b0930be2debe016ca00d381e26d30aa6134","data":{"post":{"id":"0e361faf3976bcaf0c76004821da0d4f","title":"Svelteをwebpackで使ってみました","content":"<p><a href=\"https://medium.com/codingthesmartway-com-blog/building-a-svelte-3-todo-app-from-start-to-deployment-1737f72c23a6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Building A Svelte 3 Todo App From Start To Deployment</a>\nに従いつつ、 rollup の代わりに webpack を使って from stratch で作成してみました。</p>\n<h2 id=\"手順\"><a href=\"#%E6%89%8B%E9%A0%86\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>手順</h2>\n<p>まずは Svelte アプリの作成をします。 webpack を使った template は\n<a href=\"https://github.com/sveltejs/template-webpack\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sveltejs/template-webpack</a>\nにありますが、これを参考に以下のコマンドを実行します。</p>\n<pre class=\"language-text\"><code class=\"language-text\">mkdir svelte-todo-webpack\ncd svelte-todo-webpack\nyarn init\ngit init\nyarn add -D webpack{,-cli,-dev-server} svelte{,-loader} {css,style}-loader mini-css-extract-plugin</code></pre>\n<p>今回は <code>cross-env</code>, <code>serve</code>, <code>sirv-cli</code> などを使わないようにするため、いくつか変更している箇所があります。\nとは言っても、 <code>serve</code> はどこで使っているか分からなかったので、単に webpack の設定を function にして、\n<code>--env.NODE_ENV=development</code> という風に渡すように変更しただけですが。……多分。</p>\n<p>あとはシュッと ToDo アプリの実装をします。簡単でしたね。</p>\n<h2 id=\"hmr-でのエラー\"><a href=\"#hmr-%E3%81%A7%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HMR でのエラー</h2>\n<p><code>TypeError: \"todoitem.$on is not a function\"</code>\nというようなエラーがブラウザのコンソールに出ていました。\nどうやら HMR に対応していないようなので、 HMR を無効にすることで対応しました。</p>\n<h2 id=\"感想\"><a href=\"#%E6%84%9F%E6%83%B3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>感想</h2>\n<p>他のフレームワークで webpack+babel+typescript といった構成にすることが多いので、 rollup のときよりも理解がしやすい\n構成になっているかなと思いました。</p>\n","date":"19 January 2020","timeToRead":1}},"context":{}}