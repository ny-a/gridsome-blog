{"hash":"7326f5a630496d5ad3e8ada7ec897622147f0af4","data":{"post":{"id":"7551ce7343f04cf00aca9f6fd1f64b84","title":"gatsbyを使い始めました","content":"<p>Jekyll を使い始めたところですが、早速浮気して Gatsby を使っていこうと思います。</p>\n<p><a href=\"https://dev.to/simonholdorf/9-projects-you-can-do-to-become-a-frontend-master-in-2020-n2h\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">9 Projects you can do to become a Frontend Master in 2020</a>\nに丁度 gatsby で blog を作るという項目があったので、これを順不同でこなしていこうと思います。</p>\n<h2 id=\"導入\"><a href=\"#%E5%B0%8E%E5%85%A5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>導入</h2>\n<p><code>gatsby new</code> を実行します。</p>\n<h2 id=\"gh-pages\"><a href=\"#gh-pages\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>gh-pages</h2>\n<p>公式ドキュメントの <a href=\"https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">How Gatsby Works with GitHub Pages</a>\nを参考に、 <code>yarn add -D gh-pages</code> を実行して、 deploy スクリプトを追加します。</p>\n<p>また、 <code>gatsby-config.js</code> に <code>pathPrefix</code> を追加して、実際のレポジトリに合わせて設定します。</p>\n<h2 id=\"github-pagesにデプロイ\"><a href=\"#github-pages%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>GitHub Pagesにデプロイ</h2>\n<p><code>yarn deploy</code> を実行します。</p>\n<p>標準では自動で <code>gh-pages</code> ブランチに push されるようです。</p>\n<h2 id=\"感想\"><a href=\"#%E6%84%9F%E6%83%B3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>感想</h2>\n<p>内部で GraphQL を使っていてなるほど〜となりました。\n今までこういった Static Site Generator を使ったことはなかったのですが、理想に近いものだと感じました。</p>\n<p>でも github-pages 公式サポートのある Jekyll の方が楽なんですよね……少し悩んでいます。</p>\n<p>後日 gatsby with TypeScript に挑戦したいと思っています。</p>\n","date":"05 January 2020","timeToRead":1}},"context":{}}